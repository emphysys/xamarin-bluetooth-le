<?xml version="1.0" encoding="utf-8" ?>
<views:MvxTabbedPage x:TypeArguments="viewModels:DeviceListViewModel" 
            xmlns="http://xamarin.com/schemas/2014/forms"
            xmlns:c="clr-namespace:BLE.Client.Converters"
            xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
            xmlns:views="clr-namespace:MvvmCross.Forms.Views;assembly=MvvmCross.Forms"
            xmlns:viewModels="clr-namespace:BLE.Client.ViewModels;assembly=BLE.Client"
            x:Class="BLE.Client.Pages.DeviceListPage"
            Title="Discover Bluetooth Devices"
            x:Name="DevicePage"         
            BackgroundColor="DarkGray"
            BarTextColor="GhostWhite"
            SelectedTabColor="LightSteelBlue">
    <views:MvxTabbedPage.Resources>
        <ResourceDictionary>
            <c:BluetoothNameConverter x:Key="BluetoothNameConverter"/>
            <c:PreviousGUIDConverter x:Key="PreviousGUIDConverter"/>
            <c:DeviceNameToGrayOutConverter x:Key="DeviceNameToGrayOutConverter"/>
            <DataTemplate x:Key="DeviceItemTemplate">
                <ViewCell>
                    <ViewCell.ContextActions>
                        <MenuItem Command="{Binding Path=BindingContext.DisconnectCommand, Source={x:Reference DevicePage}}"
                            CommandParameter="{Binding .}" IsDestructive="True"
                            Text="Disconnect"/>
                    </ViewCell.ContextActions>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.Triggers>
                            <DataTrigger TargetType="Grid"
                                 Binding="{Binding IsConnected}"
                                 Value="true">
                                <Setter Property="BackgroundColor" Value="#1A00FF00"></Setter>
                            </DataTrigger>
                            <DataTrigger TargetType="Grid"
                                         Binding="{Binding Name, Converter={StaticResource DeviceNameToGrayOutConverter}}"
                                         Value="false">
                                <Setter Property="BackgroundColor" Value="#33333300"/>
                            </DataTrigger>
                            <DataTrigger TargetType="Grid"
                                         Binding="{Binding Name, Converter={StaticResource DeviceNameToGrayOutConverter}}"
                                         Value="true">
                                <Setter Property="BackgroundColor" Value="#3333bbee"/>
                            </DataTrigger>
                        </Grid.Triggers>
                        <StackLayout Orientation="Vertical" VerticalOptions="Center">
                            <Label Text="{Binding Name, Converter={StaticResource BluetoothNameConverter}}" FontSize="Large" />
                            <Label Text="{Binding Id, StringFormat='GUID: {0}'}" TextColor="DimGray" FontSize="Small"/>
                        </StackLayout>
                        <Label Grid.Column="1"
                         Margin="10"
                         Text="{Binding Rssi,StringFormat='RSSI: {0}'}"
                         VerticalTextAlignment="Center"></Label>
                    </Grid>
                </ViewCell>
            </DataTemplate>
        </ResourceDictionary>
    </views:MvxTabbedPage.Resources>
    <views:MvxTabbedPage.Children>
        <ContentPage Title="Scan for devices">
            <Grid BackgroundColor="DarkGray">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                </Grid.RowDefinitions>
                <StackLayout BackgroundColor="#FF6969" Padding="10" IsVisible="{Binding IsStateOn, Converter={StaticResource InverseBoolean}}">
                    <Label Text="{Binding StateText}" FontSize="18" HorizontalTextAlignment="Center"></Label>
                </StackLayout>
                <ListView Grid.Row="1" ItemsSource="{Binding Devices}" SelectedItem="{Binding SelectedDevice, Mode=TwoWay}"
                 IsPullToRefreshEnabled="True"
                 RefreshCommand="{Binding RefreshCommand}" 
                 RowHeight="80"
                 ItemTemplate="{StaticResource DeviceItemTemplate}"
                          BackgroundColor="DarkGray">
                </ListView>
                <Label Grid.Row="2" Text="{Binding PreviousGuid, StringFormat='Previous GUID: {0}', Converter={StaticResource PreviousGUIDConverter}}" FontSize="Small" 
                       TextColor="GhostWhite" HorizontalOptions="Center" VerticalOptions="Center" VerticalTextAlignment="End"/>
                <StackLayout Grid.Row="3" Orientation="Horizontal" HorizontalOptions="Fill">
                    <StackLayout.IsVisible>
                        <OnPlatform x:TypeArguments="x:Boolean" iOS="false" Android="true" />
                    </StackLayout.IsVisible>
                    <Label Text="Use Android AutoConnect" HorizontalOptions="StartAndExpand" VerticalOptions="Center"/>
                    <Switch IsToggled="{Binding UseAutoConnect}" HorizontalOptions="End"></Switch>
                </StackLayout>
                <Button Text="Scan" BackgroundColor="SteelBlue" TextColor="GhostWhite" Command="{Binding RefreshCommand}" Margin="5,5,5,5"/>
                <StackLayout Grid.Row="5" Orientation="Horizontal">
                    <Button x:Name="buttonConnectToPrevious" Text="Connect to Previous" BackgroundColor="SteelBlue" 
                            TextColor="GhostWhite" Command="{Binding ConnectToPreviousCommand}" HorizontalOptions="FillAndExpand" Margin="5,5,5,5"/>
                    <Button x:Name="buttonStopScan" Text="Stop Scan" Padding="5,5,5,5" BackgroundColor="SteelBlue" TextColor="GhostWhite"
                            IsVisible="{Binding Source={x:Reference Name=buttonStopScan}, Path=IsEnabled}" Command="{Binding StopScanCommand}" HorizontalOptions="End" Margin="5,5,5,5"/>
                    <!--<ActivityIndicator IsRunning="{Binding IsRefreshing}"
                             IsVisible="{Binding IsRefreshing}"
                             HeightRequest="24" 
                             WidthRequest="24"
                             VerticalOptions="Center"
                             HorizontalOptions="End"/>-->
                </StackLayout>
            </Grid>
        </ContentPage>
        <ContentPage Title="System devices">
            <ListView ItemsSource="{Binding SystemDevices}" SelectedItem="{Binding SelectedDevice, Mode=TwoWay}"
                 RowHeight="80"
                 ItemTemplate="{StaticResource DeviceItemTemplate}"/>
        </ContentPage>
    </views:MvxTabbedPage.Children>

</views:MvxTabbedPage>